#!/usr/bin/env python
# coding: utf-8

import numpy as np
import pandas as pd
from tqdm import tqdm
import os
import shutil

Angles = pd.read_csv('/home/felipe/JoaoPino/1-LQsCollider_project/Data/Angles.csv', sep=',')
Couplings = pd.read_csv('/home/felipe/JoaoPino/1-LQsCollider_project/Data/Couplings.csv', sep=',')
Flavour = pd.read_csv('/home/felipe/JoaoPino/1-LQsCollider_project/Data/Flavour_obs.csv', sep=',')
SM_pars = pd.read_csv('/home/felipe/JoaoPino/1-LQsCollider_project/Data/SM_pars.csv', sep=',')

Angles_new = Angles
Couplings_new = Couplings
Flavour_new = Flavour
SM_pars_new = SM_pars

def Neutrino_oneloop(i, j, Omega, Theta, VCKM, v, a1, md, mS1, mS2):
    
    """
    Computes the loop function for the neutrino mass matrix. Takes as input
    the Yukawa matrices, Omega and Theta, the CKM mixing matrix, the cubic term
    a1, the vaccuum expectation value, the leptoquark masses (mS1 and mS2) and the
    down-type quark masses.
    
    """
    
    Cte = (3*alpha1*v)/(16*np.sqrt(2)*(mS2**2 - mS1**2)*np.pi**2)*np.log(mS2**2/mS1**2)
    
    F = Cte*sum(md[a]*VCKM[a,m]*(Theta[i][m]*Omega[j][a] + Theta[j][m]*Omega[i][a]) for m in range(3) for a in range(3)) 
    
    return F

def CKM (s12, s13, s23, d):
    
    """
    Determine the experimental CKM matrix, based on the standard parameterization
    
    Inputs:
        -> s12: sine of the angle between 1 and 2 quark states
        -> s13: sine of the angle between 1 and 3 quark states
        -> s23: sine of the angle between 2 and 3 quark states
        -> d: CP violating phase
    """
    
    c12 = np.sqrt(1 - s12**2)
    c13 = np.sqrt(1 - s13**2)
    c23 = np.sqrt(1 - s23**2)
    
    R1 = np.array([[1,0,0],[0,c23,s23],[0,-s23,c23]])
    R2 = np.array([[c13,0,s13*np.exp(-1j*d)],[0,1,0],[-s13*np.exp(1j*d),0,c13]])
    R3 = np.array([[c12,s12,0],[-s12,c12,0],[0,0,1]])
    
    Vckm = R1 @ R2 @ R3
    
    return Vckm


def eigen(A):
    
    eigenValues, eigenVectors = np.linalg.eig(A)
    idx = np.argsort(np.abs(eigenValues))
    eigenValues = np.abs(eigenValues[idx])
    eigenVectors = eigenVectors[:,idx].T
    
    return (eigenValues, eigenVectors)

#Check if folder exists. If exists, delete contents
if os.path.exists("./Cards") == True:
    shutil.rmtree("./Cards")
    os.makedirs("./Cards")
elif os.path.exists("./Cards") == False:
    os.makedirs("./Cards")

for idx in tqdm(range(len(SM_pars_new))):
    
    VCKM = CKM(s12 = Angles_new['s12q'].iloc[idx], s13 = Angles_new['s13q'].iloc[idx], s23 = Angles_new['s23q'].iloc[idx], d = Angles_new['DqCP'].iloc[idx])
    alpha1 = Couplings_new['a1'].iloc[idx]
    mS1 = Couplings_new['mS1'].iloc[idx]
    mS2 = Couplings_new['mS2'].iloc[idx]
    v = SM_pars_new['v'].iloc[idx]
    md = np.array([SM_pars_new['md'].iloc[idx], SM_pars_new['ms'].iloc[idx], SM_pars_new['mb'].iloc[idx]])

    Theta = np.array([[complex(Couplings_new['Theta11'].iloc[idx]), complex(Couplings_new['Theta12'].iloc[idx]), complex(Couplings_new['Theta13'].iloc[idx])],
                      [complex(Couplings_new['Theta21'].iloc[idx]), complex(Couplings_new['Theta22'].iloc[idx]), complex(Couplings_new['Theta23'].iloc[idx])],
                      [complex(Couplings_new['Theta31'].iloc[idx]), complex(Couplings_new['Theta32'].iloc[idx]), complex(Couplings_new['Theta33'].iloc[idx])]])

    Omega = np.array([[complex(Couplings_new['Omega11'].iloc[idx]), complex(Couplings_new['Omega12'].iloc[idx]), complex(Couplings_new['Omega13'].iloc[idx])],
                      [complex(Couplings_new['Omega21'].iloc[idx]), complex(Couplings_new['Omega22'].iloc[idx]), complex(Couplings_new['Omega23'].iloc[idx])],
                      [complex(Couplings_new['Omega31'].iloc[idx]), complex(Couplings_new['Omega32'].iloc[idx]), complex(Couplings_new['Omega33'].iloc[idx])]])

    #Calculate the neutrino mass matrix
    CW11 = Neutrino_oneloop(i=0, j = 0, Omega = Omega, Theta = Theta, VCKM = VCKM, v = v, a1 = alpha1, md = md, mS1 = mS1, mS2 = mS2)
    CW12 = Neutrino_oneloop(i=0, j = 1, Omega = Omega, Theta = Theta, VCKM = VCKM, v = v, a1 = alpha1, md = md, mS1 = mS1, mS2 = mS2)
    CW13 = Neutrino_oneloop(i=0, j = 2, Omega = Omega, Theta = Theta, VCKM = VCKM, v = v, a1 = alpha1, md = md, mS1 = mS1, mS2 = mS2)
    CW21 = Neutrino_oneloop(i=1, j = 0, Omega = Omega, Theta = Theta, VCKM = VCKM, v = v, a1 = alpha1, md = md, mS1 = mS1, mS2 = mS2)
    CW22 = Neutrino_oneloop(i=1, j = 1, Omega = Omega, Theta = Theta, VCKM = VCKM, v = v, a1 = alpha1, md = md, mS1 = mS1, mS2 = mS2)
    CW23 = Neutrino_oneloop(i=1, j = 2, Omega = Omega, Theta = Theta, VCKM = VCKM, v = v, a1 = alpha1, md = md, mS1 = mS1, mS2 = mS2)
    CW31 = Neutrino_oneloop(i=2, j = 0, Omega = Omega, Theta = Theta, VCKM = VCKM, v = v, a1 = alpha1, md = md, mS1 = mS1, mS2 = mS2)
    CW32 = Neutrino_oneloop(i=2, j = 1, Omega = Omega, Theta = Theta, VCKM = VCKM, v = v, a1 = alpha1, md = md, mS1 = mS1, mS2 = mS2)
    CW33 = Neutrino_oneloop(i=2, j = 2, Omega = Omega, Theta = Theta, VCKM = VCKM, v = v, a1 = alpha1, md = md, mS1 = mS1, mS2 = mS2)
    CW = np.array([[CW11, CW12, CW13],[CW21, CW22, CW23],[CW31, CW32, CW33]])

    Mnu_diag, UPMNS = eigen(CW)
    
    theta = np.arcsin((np.sqrt(2)*v*alpha1)/(mS1**2 - mS2**2))
    ZH = np.array([[np.cos(theta), -np.sin(theta)],[np.sin(theta), np.cos(theta)]])

    s = open("./Cards/param_card_{}.dat".format(idx), "x")
    
    s.write("######################################################################\n")
    s.write("## PARAM_CARD AUTOMATICALY GENERATED BY MG5 FOLLOWING UFO MODEL   ####\n")
    s.write("######################################################################\n")
    s.write("##                                                                  ##\n")
    s.write("##  Width set on Auto will be computed following the information    ##\n")
    s.write("##        present in the decay.py files of the model.               ##\n")
    s.write("##        See  arXiv:1402.1178 for more details.                    ##\n")
    s.write("##                                                                  ##\n")
    s.write("######################################################################\n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR SMINPUTS                                           \n")
    s.write("###################################                                   \n")
    s.write("Block SMINPUTS                                                        \n")
    s.write("1 1.370360e+02 # aEWM1                                                \n")
    s.write("3 1.190000e-01 # aS                                                   \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR CW1                                                \n")
    s.write("###################################                                   \n")
    s.write("Block CW1                                                             \n")
    s.write("    1   1 {} # rCW111                                                 \n".format(CW11.real)) 
    s.write("    1   2 {} # rCW112                                                 \n".format(CW12.real)) 
    s.write("    1   3 {} # rCW113                                                 \n".format(CW13.real)) 
    s.write("    2   1 {} # rCW121                                                 \n".format(CW21.real)) 
    s.write("    2   2 {} # rCW122                                                 \n".format(CW22.real)) 
    s.write("    2   3 {} # rCW123                                                 \n".format(CW23.real)) 
    s.write("    3   1 {} # rCW131                                                 \n".format(CW31.real)) 
    s.write("    3   2 {} # rCW132                                                 \n".format(CW32.real)) 
    s.write("    3   3 {} # rCW133                                                 \n".format(CW33.real)) 
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMCW1                                              \n")
    s.write("###################################                                   \n")
    s.write("Block IMCW1                                                           \n")
    s.write("    1   1 {} # iCW111                                                 \n".format(CW11.imag))
    s.write("    1   2 {} # iCW112                                                 \n".format(CW12.imag))
    s.write("    1   3 {} # iCW113                                                 \n".format(CW13.imag))
    s.write("    2   1 {} # iCW121                                                 \n".format(CW21.imag))
    s.write("    2   2 {} # iCW122                                                 \n".format(CW22.imag))
    s.write("    2   3 {} # iCW123                                                 \n".format(CW23.imag))
    s.write("    3   1 {} # iCW131                                                 \n".format(CW31.imag))
    s.write("    3   2 {} # iCW132                                                 \n".format(CW32.imag))
    s.write("    3   3 {} # iCW133                                                 \n".format(CW33.imag))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR EFFHIGGSCOUPLINGS                                  \n")
    s.write("###################################                                   \n")
    s.write("Block EFFHIGGSCOUPLINGS                                               \n")
    s.write("   25  21  21 0.000000e+00 # HGG1                                     \n")
    s.write("   25  22  22 0.000000e+00 # HPP1                                     \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR A1                                                 \n")
    s.write("###################################                                   \n")
    s.write("Block A1                                                              \n")
    s.write("    1 {} # ra1                                                        \n".format(Couplings_new['a1'].iloc[idx].real))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMA1                                               \n")
    s.write("###################################                                   \n")
    s.write("Block IMA1                                                            \n")
    s.write("    1 {} # ia1                                                        \n".format(Couplings_new['a1'].iloc[idx].imag))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR GHR                                                \n")
    s.write("###################################                                   \n")
    s.write("Block GHR                                                             \n")
    s.write("    1 {} # rgHR                                                       \n".format(Couplings_new['gHR'].iloc[idx].real))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMGHR                                              \n")
    s.write("###################################                                   \n")
    s.write("Block IMGHR                                                           \n")
    s.write("    1 {} # igHR                                                       \n".format(Couplings_new['gHR'].iloc[idx].imag))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR GHS                                                \n")
    s.write("###################################                                   \n")
    s.write("Block GHS                                                             \n")
    s.write("    1 {} # rgHS                                                       \n".format(Couplings_new['gHS'].iloc[idx].real))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMGHS                                              \n")
    s.write("###################################                                   \n")
    s.write("Block IMGHS                                                           \n")
    s.write("    1 {} # igHS                                                       \n".format(Couplings_new['gHS'].iloc[idx].imag))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR GHRP                                               \n")
    s.write("###################################                                   \n")
    s.write("Block GHRP                                                            \n")
    s.write("    1 {} # rghrp                                                      \n".format(Couplings_new['gHRp'].iloc[idx].real))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMGHRP                                             \n")
    s.write("###################################                                   \n")
    s.write("Block IMGHRP                                                          \n")
    s.write("    1 {} # ighrp                                                      \n".format(Couplings_new['gHRp'].iloc[idx].imag))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR LAMBR                                              \n")
    s.write("###################################                                   \n")
    s.write("Block LAMBR                                                           \n")
    s.write("    1 0.000000e+00 # rlambR                                           \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMLAMBR                                            \n")
    s.write("###################################                                   \n")
    s.write("Block IMLAMBR                                                         \n")
    s.write("    1 0.000000e+00 # ilambR                                           \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR LAMBS                                              \n")
    s.write("###################################                                   \n")
    s.write("Block LAMBS                                                           \n")
    s.write("    1 0.000000e+00 # rlambS                                           \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMLAMBS                                            \n")
    s.write("###################################                                   \n")
    s.write("Block IMLAMBS                                                         \n")
    s.write("    1 0.000000e+00 # ilambS                                           \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR RRSS                                               \n")
    s.write("###################################                                   \n")
    s.write("Block RRSS                                                            \n")
    s.write("    1 0.000000e+00 # rRRSS                                            \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMRRSS                                             \n")
    s.write("###################################                                   \n")
    s.write("Block IMRRSS                                                          \n")
    s.write("    1 0.000000e+00 # iRRSS                                            \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMLRRS                                             \n")
    s.write("###################################                                   \n")
    s.write("Block IMLRRS                                                          \n")
    s.write("    1 0.000000e+00 # ilRRS                                            \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR LRRS                                               \n")
    s.write("###################################                                   \n")
    s.write("Block LRRS                                                            \n")
    s.write("    1 0.000000e+00 # rlRRS                                            \n")
    s.write("                                                                      \n")
    s.write("## INFORMATION FOR UDRMIX                                             \n")
    s.write("###################################                                   \n")
    s.write("Block UDRMIX                                                          \n")
    s.write("    1   1 1.000000e+00 # rZDR11                                       \n")
    s.write("    1   2 0.000000e+00 # rZDR12                                       \n")
    s.write("    1   3 0.000000e+00 # rZDR13                                       \n")
    s.write("    2   1 0.000000e+00 # rZDR21                                       \n")
    s.write("    2   2 1.000000e+00 # rZDR22                                       \n")
    s.write("    2   3 0.000000e+00 # rZDR23                                       \n")
    s.write("    3   1 0.000000e+00 # rZDR31                                       \n")
    s.write("    3   2 0.000000e+00 # rZDR32                                       \n")
    s.write("    3   3 1.000000e+00 # rZDR33                                       \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("                                                                      \n")
    s.write("## INFORMATION FOR IMUDRMIX                                           \n")
    s.write("###################################                                   \n")
    s.write("Block IMUDRMIX                                                        \n")
    s.write("    1   1 0.000000e+00 # iZDR11                                       \n")
    s.write("    1   2 0.000000e+00 # iZDR12                                       \n")
    s.write("    1   3 0.000000e+00 # iZDR13                                       \n")
    s.write("    2   1 0.000000e+00 # iZDR21                                       \n")
    s.write("    2   2 0.000000e+00 # iZDR22                                       \n")
    s.write("    2   3 0.000000e+00 # iZDR23                                       \n")
    s.write("    3   1 0.000000e+00 # iZDR31                                       \n")
    s.write("    3   2 0.000000e+00 # iZDR32                                       \n")
    s.write("    3   3 0.000000e+00 # iZDR33                                       \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR UDLMIX                                             \n")
    s.write("###################################                                   \n")
    s.write("Block UDLMIX                                                          \n")
    s.write("    1   1 {} # rZDL11                                                 \n".format(VCKM[0,0].real))
    s.write("    1   2 {} # rZDL12                                                 \n".format(VCKM[0,1].real))
    s.write("    1   3 {} # rZDL13                                                 \n".format(VCKM[0,2].real))
    s.write("    2   1 {} # rZDL21                                                 \n".format(VCKM[1,0].real))
    s.write("    2   2 {} # rZDL22                                                 \n".format(VCKM[1,1].real))
    s.write("    2   3 {} # rZDL23                                                 \n".format(VCKM[1,2].real))
    s.write("    3   1 {} # rZDL31                                                 \n".format(VCKM[2,0].real))
    s.write("    3   2 {} # rZDL32                                                 \n".format(VCKM[2,1].real))
    s.write("    3   3 {} # rZDL33                                                 \n".format(VCKM[2,2].real))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMUDLMIX                                           \n")
    s.write("###################################                                   \n")
    s.write("Block IMUDLMIX                                                        \n")
    s.write("    1   1 {} # iZDL11                                                 \n".format(VCKM[0,0].imag))
    s.write("    1   2 {} # iZDL12                                                 \n".format(VCKM[0,1].imag))
    s.write("    1   3 {} # iZDL13                                                 \n".format(VCKM[0,2].imag))
    s.write("    2   1 {} # iZDL21                                                 \n".format(VCKM[1,0].imag))
    s.write("    2   2 {} # iZDL22                                                 \n".format(VCKM[1,1].imag))
    s.write("    2   3 {} # iZDL23                                                 \n".format(VCKM[1,2].imag))
    s.write("    3   1 {} # iZDL31                                                 \n".format(VCKM[2,0].imag))
    s.write("    3   2 {} # iZDL32                                                 \n".format(VCKM[2,1].imag))
    s.write("    3   3 {} # iZDL33                                                 \n".format(VCKM[2,2].imag))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR UURMIX                                             \n")
    s.write("###################################                                   \n")
    s.write("Block UURMIX                                                          \n")
    s.write("    1   1 1.000000e+00 # rZUR11                                       \n")
    s.write("    1   2 0.000000e+00 # rZUR12                                       \n")
    s.write("    1   3 0.000000e+00 # rZUR13                                       \n")
    s.write("    2   1 0.000000e+00 # rZUR21                                       \n")
    s.write("    2   2 1.000000e+00 # rZUR22                                       \n")
    s.write("    2   3 0.000000e+00 # rZUR23                                       \n")
    s.write("    3   1 0.000000e+00 # rZUR31                                       \n")
    s.write("    3   2 0.000000e+00 # rZUR32                                       \n")
    s.write("    3   3 1.000000e+00 # rZUR33                                       \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMUURMIX                                           \n")
    s.write("###################################                                   \n")
    s.write("Block IMUURMIX                                                        \n")
    s.write("    1   1 0.000000e+00 # iZUR11                                       \n")
    s.write("    1   2 0.000000e+00 # iZUR12                                       \n")
    s.write("    1   3 0.000000e+00 # iZUR13                                       \n")
    s.write("    2   1 0.000000e+00 # iZUR21                                       \n")
    s.write("    2   2 0.000000e+00 # iZUR22                                       \n")
    s.write("    2   3 0.000000e+00 # iZUR23                                       \n")
    s.write("    3   1 0.000000e+00 # iZUR31                                       \n")
    s.write("    3   2 0.000000e+00 # iZUR32                                       \n")
    s.write("    3   3 0.000000e+00 # iZUR33                                       \n")
    s.write("                                                                      \n")    
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR UULMIX                                             \n")
    s.write("###################################                                   \n")
    s.write("Block UULMIX                                                          \n")
    s.write("    1   1 1.000000e+00 # rZUL11                                       \n")
    s.write("    1   2 0.000000e+00 # rZUL12                                       \n")
    s.write("    1   3 0.000000e+00 # rZUL13                                       \n")
    s.write("    2   1 0.000000e+00 # rZUL21                                       \n")
    s.write("    2   2 1.000000e+00 # rZUL22                                       \n")
    s.write("    2   3 0.000000e+00 # rZUL23                                       \n")
    s.write("    3   1 0.000000e+00 # rZUL31                                       \n")
    s.write("    3   2 0.000000e+00 # rZUL32                                       \n")
    s.write("    3   3 1.000000e+00 # rZUL33                                       \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMUULMIX                                           \n")
    s.write("###################################                                   \n")
    s.write("Block IMUULMIX                                                        \n")
    s.write("    1   1 0.000000e+00 # iZUL11                                       \n")
    s.write("    1   2 0.000000e+00 # iZUL12                                       \n")
    s.write("    1   3 0.000000e+00 # iZUL13                                       \n")
    s.write("    2   1 0.000000e+00 # iZUL21                                       \n")
    s.write("    2   2 0.000000e+00 # iZUL22                                       \n")
    s.write("    2   3 0.000000e+00 # iZUL23                                       \n")
    s.write("    3   1 0.000000e+00 # iZUL31                                       \n")
    s.write("    3   2 0.000000e+00 # iZUL32                                       \n")
    s.write("    3   3 0.000000e+00 # iZUL33                                       \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR UERMIX                                             \n")
    s.write("###################################                                   \n")
    s.write("Block UERMIX                                                          \n")
    s.write("    1   1 1.000000e+00 # rZER11                                       \n")
    s.write("    1   2 0.000000e+00 # rZER12                                       \n")
    s.write("    1   3 0.000000e+00 # rZER13                                       \n")
    s.write("    2   1 0.000000e+00 # rZER21                                       \n")
    s.write("    2   2 1.000000e+00 # rZER22                                       \n")
    s.write("    2   3 0.000000e+00 # rZER23                                       \n")
    s.write("    3   1 0.000000e+00 # rZER31                                       \n")
    s.write("    3   2 0.000000e+00 # rZER32                                       \n")
    s.write("    3   3 1.000000e+00 # rZER33                                       \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMUERMIX                                           \n")
    s.write("###################################                                   \n")
    s.write("Block IMUERMIX                                                        \n")
    s.write("    1   1 0.000000e+00 # iZER11                                       \n")
    s.write("    1   2 0.000000e+00 # iZER12                                       \n")
    s.write("    1   3 0.000000e+00 # iZER13                                       \n")
    s.write("    2   1 0.000000e+00 # iZER21                                       \n")
    s.write("    2   2 0.000000e+00 # iZER22                                       \n")
    s.write("    2   3 0.000000e+00 # iZER23                                       \n")
    s.write("    3   1 0.000000e+00 # iZER31                                       \n")
    s.write("    3   2 0.000000e+00 # iZER32                                       \n")
    s.write("    3   3 0.000000e+00 # iZER33                                       \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR UELMIX                                             \n")
    s.write("###################################                                   \n")
    s.write("Block UELMIX                                                          \n")
    s.write("    1   1 1.000000e+00 # rZEL11                                       \n")
    s.write("    1   2 0.000000e+00 # rZEL12                                       \n")
    s.write("    1   3 0.000000e+00 # rZEL13                                       \n")
    s.write("    2   1 0.000000e+00 # rZEL21                                       \n")
    s.write("    2   2 1.000000e+00 # rZEL22                                       \n")
    s.write("    2   3 0.000000e+00 # rZEL23                                       \n")
    s.write("    3   1 0.000000e+00 # rZEL31                                       \n")
    s.write("    3   2 0.000000e+00 # rZEL32                                       \n")
    s.write("    3   3 1.000000e+00 # rZEL33                                       \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMUELMIX                                           \n")
    s.write("###################################                                   \n")
    s.write("Block IMUELMIX                                                        \n")  
    s.write("    1   1 0.000000e+00 # iZEL11                                       \n")
    s.write("    1   2 0.000000e+00 # iZEL12                                       \n")
    s.write("    1   3 0.000000e+00 # iZEL13                                       \n")
    s.write("    2   1 0.000000e+00 # iZEL21                                       \n")
    s.write("    2   2 0.000000e+00 # iZEL22                                       \n")
    s.write("    2   3 0.000000e+00 # iZEL23                                       \n")
    s.write("    3   1 0.000000e+00 # iZEL31                                       \n")
    s.write("    3   2 0.000000e+00 # iZEL32                                       \n")
    s.write("    3   3 0.000000e+00 # iZEL33                                       \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR ZMMIX                                              \n")
    s.write("###################################                                   \n")
    s.write("Block ZMMIX                                                           \n")
    s.write("    1   1 {} # rZM11                                                  \n".format(UPMNS[0,0].real))
    s.write("    1   2 {} # rZM12                                                  \n".format(UPMNS[0,1].real))
    s.write("    1   3 {} # rZM13                                                  \n".format(UPMNS[0,2].real))
    s.write("    2   1 {} # rZM21                                                  \n".format(UPMNS[1,0].real))
    s.write("    2   2 {} # rZM22                                                  \n".format(UPMNS[1,1].real))
    s.write("    2   3 {} # rZM23                                                  \n".format(UPMNS[1,2].real))
    s.write("    3   1 {} # rZM31                                                  \n".format(UPMNS[2,0].real))
    s.write("    3   2 {} # rZM32                                                  \n".format(UPMNS[2,1].real))
    s.write("    3   3 {} # rZM33                                                  \n".format(UPMNS[2,2].real))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMZMMIX                                            \n")
    s.write("###################################                                   \n")
    s.write("Block IMZMMIX                                                         \n")
    s.write("    1   1 {} # iZM11                                                  \n".format(UPMNS[0,0].imag))
    s.write("    1   2 {} # iZM12                                                  \n".format(UPMNS[0,1].imag))
    s.write("    1   3 {} # iZM13                                                  \n".format(UPMNS[0,2].imag))
    s.write("    2   1 {} # iZM21                                                  \n".format(UPMNS[1,0].imag))
    s.write("    2   2 {} # iZM22                                                  \n".format(UPMNS[1,1].imag))
    s.write("    2   3 {} # iZM23                                                  \n".format(UPMNS[1,2].imag))
    s.write("    3   1 {} # iZM31                                                  \n".format(UPMNS[2,0].imag))
    s.write("    3   2 {} # iZM32                                                  \n".format(UPMNS[2,1].imag))
    s.write("    3   3 {} # iZM33                                                  \n".format(UPMNS[2,2].imag))
    s.write("                                                                      \n")
    s.write("## INFORMATION FOR ZHMIX                                              \n")
    s.write("###################################                                   \n")
    s.write("Block ZHMIX                                                           \n")
    s.write("    1   1 {} # rZH11                                                  \n".format(ZH[0,0].real))
    s.write("    1   2 {} # rZH12                                                  \n".format(ZH[0,1].real))
    s.write("    2   1 {} # rZH21                                                  \n".format(ZH[1,0].real))
    s.write("    2   2 {} # rZH22                                                  \n".format(ZH[1,1].real))
    s.write("                                                                      \n")  
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMZHMIX                                            \n")
    s.write("###################################                                   \n")
    s.write("Block IMZHMIX                                                         \n")
    s.write("    1   1 {} # iZH11                                                  \n".format(ZH[0,0].imag))
    s.write("    1   2 {} # iZH12                                                  \n".format(ZH[0,1].imag))
    s.write("    2   1 {} # iZH21                                                  \n".format(ZH[1,0].imag))
    s.write("    2   2 {} # iZH22                                                  \n".format(ZH[1,1].imag))
    s.write("###################################                                   \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR YE                                                 \n")
    s.write("###################################                                   \n")
    s.write("Block YE                                                              \n")
    s.write("    1   1 {} # rye11                                                  \n".format(complex(Couplings_new['Ye11'].iloc[idx]).real))
    s.write("    1   2 {} # rye12                                                  \n".format(complex(Couplings_new['Ye12'].iloc[idx]).real))
    s.write("    1   3 {} # rye13                                                  \n".format(complex(Couplings_new['Ye13'].iloc[idx]).real))
    s.write("    2   1 {} # rye21                                                  \n".format(complex(Couplings_new['Ye21'].iloc[idx]).real))
    s.write("    2   2 {} # rye22                                                  \n".format(complex(Couplings_new['Ye22'].iloc[idx]).real))
    s.write("    2   3 {} # rye23                                                  \n".format(complex(Couplings_new['Ye23'].iloc[idx]).real))
    s.write("    3   1 {} # rye31                                                  \n".format(complex(Couplings_new['Ye31'].iloc[idx]).real))
    s.write("    3   2 {} # rye32                                                  \n".format(complex(Couplings_new['Ye32'].iloc[idx]).real))
    s.write("    3   3 {} # rye33                                                  \n".format(complex(Couplings_new['Ye33'].iloc[idx]).real))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMYE                                               \n")
    s.write("###################################                                   \n")
    s.write("Block IMYE                                                            \n")
    s.write("    1   1 {} # iye11                                                  \n".format(complex(Couplings_new['Ye11'].iloc[idx]).imag))
    s.write("    1   2 {} # iye12                                                  \n".format(complex(Couplings_new['Ye12'].iloc[idx]).imag))
    s.write("    1   3 {} # iye13                                                  \n".format(complex(Couplings_new['Ye13'].iloc[idx]).imag))
    s.write("    2   1 {} # iye21                                                  \n".format(complex(Couplings_new['Ye21'].iloc[idx]).imag))
    s.write("    2   2 {} # iye22                                                  \n".format(complex(Couplings_new['Ye22'].iloc[idx]).imag))
    s.write("    2   3 {} # iye23                                                  \n".format(complex(Couplings_new['Ye23'].iloc[idx]).imag))
    s.write("    3   1 {} # iye31                                                  \n".format(complex(Couplings_new['Ye31'].iloc[idx]).imag))
    s.write("    3   2 {} # iye32                                                  \n".format(complex(Couplings_new['Ye32'].iloc[idx]).imag))
    s.write("    3   3 {} # iye33                                                  \n".format(complex(Couplings_new['Ye33'].iloc[idx]).imag))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR YU                                                 \n")
    s.write("###################################                                   \n")
    s.write("Block YU                                                              \n")
    s.write("    1   1 {} # ryu11                                                  \n".format(complex(Couplings_new['Yu11'].iloc[idx]).real))
    s.write("    1   2 {} # ryu12                                                  \n".format(complex(Couplings_new['Yu12'].iloc[idx]).real))
    s.write("    1   3 {} # ryu13                                                  \n".format(complex(Couplings_new['Yu13'].iloc[idx]).real))
    s.write("    2   1 {} # ryu21                                                  \n".format(complex(Couplings_new['Yu21'].iloc[idx]).real))
    s.write("    2   2 {} # ryu22                                                  \n".format(complex(Couplings_new['Yu22'].iloc[idx]).real))
    s.write("    2   3 {} # ryu23                                                  \n".format(complex(Couplings_new['Yu23'].iloc[idx]).real))
    s.write("    3   1 {} # ryu31                                                  \n".format(complex(Couplings_new['Yu31'].iloc[idx]).real))
    s.write("    3   2 {} # ryu32                                                  \n".format(complex(Couplings_new['Yu32'].iloc[idx]).real))
    s.write("    3   3 {} # ryu33                                                  \n".format(complex(Couplings_new['Yu33'].iloc[idx]).real))
    s.write("###################################                                   \n")
    s.write("                                                                      \n")
    s.write("## INFORMATION FOR IMYU                                               \n")
    s.write("###################################                                   \n")
    s.write("Block IMYU                                                            \n")
    s.write("    1   1 {} # iyu11                                                  \n".format(complex(Couplings_new['Yu11'].iloc[idx]).imag))
    s.write("    1   2 {} # iyu12                                                  \n".format(complex(Couplings_new['Yu12'].iloc[idx]).imag))
    s.write("    1   3 {} # iyu13                                                  \n".format(complex(Couplings_new['Yu13'].iloc[idx]).imag))
    s.write("    2   1 {} # iyu21                                                  \n".format(complex(Couplings_new['Yu21'].iloc[idx]).imag))
    s.write("    2   2 {} # iyu22                                                  \n".format(complex(Couplings_new['Yu22'].iloc[idx]).imag))
    s.write("    2   3 {} # iyu23                                                  \n".format(complex(Couplings_new['Yu23'].iloc[idx]).imag))
    s.write("    3   1 {} # iyu31                                                  \n".format(complex(Couplings_new['Yu31'].iloc[idx]).imag))
    s.write("    3   2 {} # iyu32                                                  \n".format(complex(Couplings_new['Yu32'].iloc[idx]).imag))
    s.write("    3   3 {} # iyu33                                                  \n".format(complex(Couplings_new['Yu33'].iloc[idx]).imag))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR YD                                                 \n")
    s.write("###################################                                   \n")
    s.write("Block YD                                                              \n")
    s.write("    1   1 {} # ryd11                                                  \n".format(complex(Couplings_new['Yd11'].iloc[idx]).real))
    s.write("    1   2 {} # ryd12                                                  \n".format(complex(Couplings_new['Yd12'].iloc[idx]).real))
    s.write("    1   3 {} # ryd13                                                  \n".format(complex(Couplings_new['Yd13'].iloc[idx]).real))
    s.write("    2   1 {} # ryd21                                                  \n".format(complex(Couplings_new['Yd21'].iloc[idx]).real))
    s.write("    2   2 {} # ryd22                                                  \n".format(complex(Couplings_new['Yd22'].iloc[idx]).real))
    s.write("    2   3 {} # ryd23                                                  \n".format(complex(Couplings_new['Yd23'].iloc[idx]).real))
    s.write("    3   1 {} # ryd31                                                  \n".format(complex(Couplings_new['Yd31'].iloc[idx]).real))
    s.write("    3   2 {} # ryd32                                                  \n".format(complex(Couplings_new['Yd32'].iloc[idx]).real))
    s.write("    3   3 {} # ryd33                                                  \n".format(complex(Couplings_new['Yd33'].iloc[idx]).real))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMYD                                               \n")
    s.write("###################################                                   \n")
    s.write("Block IMYD                                                            \n")
    s.write("    1   1 {} # iyd11                                                  \n".format(complex(Couplings_new['Yd11'].iloc[idx]).imag))
    s.write("    1   2 {} # iyd12                                                  \n".format(complex(Couplings_new['Yd12'].iloc[idx]).imag))
    s.write("    1   3 {} # iyd13                                                  \n".format(complex(Couplings_new['Yd13'].iloc[idx]).imag))
    s.write("    2   1 {} # iyd21                                                  \n".format(complex(Couplings_new['Yd21'].iloc[idx]).imag))
    s.write("    2   2 {} # iyd22                                                  \n".format(complex(Couplings_new['Yd22'].iloc[idx]).imag))
    s.write("    2   3 {} # iyd23                                                  \n".format(complex(Couplings_new['Yd23'].iloc[idx]).imag))
    s.write("    3   1 {} # iyd31                                                  \n".format(complex(Couplings_new['Yd31'].iloc[idx]).imag))
    s.write("    3   2 {} # iyd32                                                  \n".format(complex(Couplings_new['Yd32'].iloc[idx]).imag))
    s.write("    3   3 {} # iyd33                                                  \n".format(complex(Couplings_new['Yd33'].iloc[idx]).imag))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR UPSILON                                            \n")
    s.write("###################################                                   \n")
    s.write("Block UPSILON                                                         \n")
    s.write("    1   1 {} # rUpsilon11                                             \n".format(complex(Couplings_new['Upsilon11'].iloc[idx]).real))
    s.write("    1   2 {} # rUpsilon12                                             \n".format(complex(Couplings_new['Upsilon12'].iloc[idx]).real))
    s.write("    1   3 {} # rUpsilon13                                             \n".format(complex(Couplings_new['Upsilon13'].iloc[idx]).real))
    s.write("    2   1 {} # rUpsilon21                                             \n".format(complex(Couplings_new['Upsilon21'].iloc[idx]).real))
    s.write("    2   2 {} # rUpsilon22                                             \n".format(complex(Couplings_new['Upsilon22'].iloc[idx]).real))
    s.write("    2   3 {} # rUpsilon23                                             \n".format(complex(Couplings_new['Upsilon23'].iloc[idx]).real))
    s.write("    3   1 {} # rUpsilon31                                             \n".format(complex(Couplings_new['Upsilon31'].iloc[idx]).real))
    s.write("    3   2 {} # rUpsilon32                                             \n".format(complex(Couplings_new['Upsilon32'].iloc[idx]).real))
    s.write("    3   3 {} # rUpsilon33                                             \n".format(complex(Couplings_new['Upsilon33'].iloc[idx]).real))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMUPSILON                                          \n")
    s.write("###################################                                   \n")
    s.write("Block IMUPSILON                                                       \n")
    s.write("    1   1 {} # iUpsilon11                                             \n".format(complex(Couplings_new['Upsilon11'].iloc[idx]).imag))
    s.write("    1   2 {} # iUpsilon12                                             \n".format(complex(Couplings_new['Upsilon12'].iloc[idx]).imag))
    s.write("    1   3 {} # iUpsilon13                                             \n".format(complex(Couplings_new['Upsilon13'].iloc[idx]).imag))
    s.write("    2   1 {} # iUpsilon21                                             \n".format(complex(Couplings_new['Upsilon21'].iloc[idx]).imag))
    s.write("    2   2 {} # iUpsilon22                                             \n".format(complex(Couplings_new['Upsilon22'].iloc[idx]).imag))
    s.write("    2   3 {} # iUpsilon23                                             \n".format(complex(Couplings_new['Upsilon23'].iloc[idx]).imag))
    s.write("    3   1 {} # iUpsilon31                                             \n".format(complex(Couplings_new['Upsilon31'].iloc[idx]).imag))
    s.write("    3   2 {} # iUpsilon32                                             \n".format(complex(Couplings_new['Upsilon32'].iloc[idx]).imag))
    s.write("    3   3 {} # iUpsilon33                                             \n".format(complex(Couplings_new['Upsilon33'].iloc[idx]).imag))    
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR THETA                                              \n")
    s.write("###################################                                   \n")
    s.write("Block THETA                                                           \n")
    s.write("    1   1 {} # rTheta11                                               \n".format(complex(Couplings_new['Theta11'].iloc[idx]).real))
    s.write("    1   2 {} # rTheta12                                               \n".format(complex(Couplings_new['Theta12'].iloc[idx]).real))
    s.write("    1   3 {} # rTheta13                                               \n".format(complex(Couplings_new['Theta13'].iloc[idx]).real))
    s.write("    2   1 {} # rTheta21                                               \n".format(complex(Couplings_new['Theta21'].iloc[idx]).real))
    s.write("    2   2 {} # rTheta22                                               \n".format(complex(Couplings_new['Theta22'].iloc[idx]).real))
    s.write("    2   3 {} # rTheta23                                               \n".format(complex(Couplings_new['Theta23'].iloc[idx]).real))
    s.write("    3   1 {} # rTheta31                                               \n".format(complex(Couplings_new['Theta31'].iloc[idx]).real))
    s.write("    3   2 {} # rTheta32                                               \n".format(complex(Couplings_new['Theta32'].iloc[idx]).real))
    s.write("    3   3 {} # rTheta33                                               \n".format(complex(Couplings_new['Theta33'].iloc[idx]).real))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMTHETA                                            \n")
    s.write("###################################                                   \n")
    s.write("Block IMTHETA                                                         \n")
    s.write("    1   1 {} # iTheta11                                               \n".format(complex(Couplings_new['Theta11'].iloc[idx]).imag))
    s.write("    1   2 {} # iTheta12                                               \n".format(complex(Couplings_new['Theta12'].iloc[idx]).imag))
    s.write("    1   3 {} # iTheta13                                               \n".format(complex(Couplings_new['Theta13'].iloc[idx]).imag))
    s.write("    2   1 {} # iTheta21                                               \n".format(complex(Couplings_new['Theta21'].iloc[idx]).imag))
    s.write("    2   2 {} # iTheta22                                               \n".format(complex(Couplings_new['Theta22'].iloc[idx]).imag))
    s.write("    2   3 {} # iTheta23                                               \n".format(complex(Couplings_new['Theta23'].iloc[idx]).imag))
    s.write("    3   1 {} # iTheta31                                               \n".format(complex(Couplings_new['Theta31'].iloc[idx]).imag))
    s.write("    3   2 {} # iTheta32                                               \n".format(complex(Couplings_new['Theta32'].iloc[idx]).imag))
    s.write("    3   3 {} # iTheta33                                               \n".format(complex(Couplings_new['Theta33'].iloc[idx]).imag))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR OMEGA                                              \n")
    s.write("###################################                                   \n")
    s.write("Block OMEGA                                                           \n")
    s.write("    1   1 {} # rOmega11                                               \n".format(complex(Couplings_new['Omega11'].iloc[idx]).real))
    s.write("    1   2 {} # rOmega12                                               \n".format(complex(Couplings_new['Omega12'].iloc[idx]).real))
    s.write("    1   3 {} # rOmega13                                               \n".format(complex(Couplings_new['Omega13'].iloc[idx]).real))
    s.write("    2   1 {} # rOmega21                                               \n".format(complex(Couplings_new['Omega21'].iloc[idx]).real))
    s.write("    2   2 {} # rOmega22                                               \n".format(complex(Couplings_new['Omega22'].iloc[idx]).real))
    s.write("    2   3 {} # rOmega23                                               \n".format(complex(Couplings_new['Omega23'].iloc[idx]).real))
    s.write("    3   1 {} # rOmega31                                               \n".format(complex(Couplings_new['Omega31'].iloc[idx]).real))
    s.write("    3   2 {} # rOmega32                                               \n".format(complex(Couplings_new['Omega32'].iloc[idx]).real))
    s.write("    3   3 {} # rOmega33                                               \n".format(complex(Couplings_new['Omega33'].iloc[idx]).real))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR IMOMEGA                                            \n")
    s.write("###################################                                   \n")
    s.write("Block IMOMEGA                                                         \n")
    s.write("    1   1 {} # iOmega11                                               \n".format(complex(Couplings_new['Omega11'].iloc[idx]).imag))
    s.write("    1   2 {} # iOmega12                                               \n".format(complex(Couplings_new['Omega12'].iloc[idx]).imag))
    s.write("    1   3 {} # iOmega13                                               \n".format(complex(Couplings_new['Omega13'].iloc[idx]).imag))
    s.write("    2   1 {} # iOmega21                                               \n".format(complex(Couplings_new['Omega21'].iloc[idx]).imag))
    s.write("    2   2 {} # iOmega22                                               \n".format(complex(Couplings_new['Omega22'].iloc[idx]).imag))
    s.write("    2   3 {} # iOmega23                                               \n".format(complex(Couplings_new['Omega23'].iloc[idx]).imag))
    s.write("    3   1 {} # iOmega31                                               \n".format(complex(Couplings_new['Omega31'].iloc[idx]).imag))
    s.write("    3   2 {} # iOmega32                                               \n".format(complex(Couplings_new['Omega32'].iloc[idx]).imag))
    s.write("    3   3 {} # iOmega33                                               \n".format(complex(Couplings_new['Omega33'].iloc[idx]).imag))
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR MASS                                               \n")
    s.write("###################################                                   \n")
    s.write("Block MASS                                                            \n")
    s.write("    1 {} # Md1                                                        \n".format(SM_pars_new['md'].iloc[idx]))
    s.write("    2 {} # Mu1                                                        \n".format(SM_pars_new['mu'].iloc[idx]))
    s.write("    3 {} # Md2                                                        \n".format(SM_pars_new['ms'].iloc[idx]))
    s.write("    4 {} # Mu2                                                        \n".format(SM_pars_new['mc'].iloc[idx]))
    s.write("    5 {} # Md3                                                        \n".format(SM_pars_new['mb'].iloc[idx]))
    s.write("    6 {} # Mu3                                                        \n".format(SM_pars_new['mt'].iloc[idx]))
    s.write("   11 {} # Me1                                                        \n".format(SM_pars_new['me'].iloc[idx]))
    s.write("   13 {} # Me2                                                        \n".format(SM_pars_new['mmu'].iloc[idx]))
    s.write("   15 {} # Me3                                                        \n".format(SM_pars_new['mtau'].iloc[idx]))
    s.write("   23 9.118800e+01 # MZ                                               \n")
    s.write("   24 8.037900e+01 # MWm                                              \n")
    s.write("   25 1.250000e+02 # Mh                                               \n")
    s.write("  999014 {} # MS1                                                     \n".format(mS1))
    s.write("  999024 {} # MS2                                                     \n".format(mS2))
    s.write("  999034 {} # MR                                                      \n".format(Flavour_new['mrp'].iloc[idx]))
    s.write("## Dependent parameters, given by model restrictions.                 \n")
    s.write("## Those values should be edited following the                        \n")
    s.write("## analytical expression. MG5 ignores those values                    \n")
    s.write("## but they are important for interfacing the output of MG5           \n")
    s.write("## to external program such as Pythia.                                \n")
    s.write("  12 {} # ve : 0.0                                                    \n".format(SM_pars['m1p'].iloc[idx]))
    s.write("  14 {} # vm : 0.0                                                    \n".format(SM_pars['m2p'].iloc[idx]))
    s.write("  16 {} # vt : 0.0                                                    \n".format(SM_pars['m3p'].iloc[idx]))
    s.write("  21 0.000000e+00 # g : 0.0                                           \n")
    s.write("  22 0.000000e+00 # a : 0.0                                           \n")
    s.write("                                                                      \n")
    s.write("###################################                                   \n")
    s.write("## INFORMATION FOR DECAY                                              \n")
    s.write("###################################                                   \n")
    s.write("DECAY   1 0.000000e+00 # Wd1                                          \n")
    s.write("DECAY   2 0.000000e+00 # Wu1                                          \n")
    s.write("DECAY   3 0.000000e+00 # Wd2                                          \n")
    s.write("DECAY   4 0.000000e+00 # Wu2                                          \n")
    s.write("DECAY   5 0.000000e+00 # Wd3                                          \n")
    s.write("DECAY   6 Auto # Wu3                                                  \n")
    s.write("DECAY  11 0.000000e+00 # We1                                          \n")
    s.write("DECAY  13 0.000000e+00 # We2                                          \n")
    s.write("DECAY  15 0.000000e+00 # We3                                          \n")
    s.write("DECAY  23 2.441400e+00 # WZ                                           \n")
    s.write("DECAY  24 2.047600e+00 # WWm                                          \n")
    s.write("DECAY  25 6.38233934e-03 # Wh                                         \n")
    s.write("DECAY 999014 Auto # WS1                                               \n")
    s.write("DECAY 999024 Auto # WS2                                               \n")
    s.write("DECAY 999034 Auto # WR                                                \n")
    s.write("## Dependent parameters, given by model restrictions.                 \n")
    s.write("## Those values should be edited following the                        \n")
    s.write("## analytical expression. MG5 ignores those values                    \n")
    s.write("## but they are important for interfacing the output of MG5           \n")
    s.write("## to external program such as Pythia.                                \n")
    s.write("DECAY  12 0.000000e+00 # ve : 0.0                                     \n")
    s.write("DECAY  14 0.000000e+00 # vm : 0.0                                     \n")
    s.write("DECAY  16 0.000000e+00 # vt : 0.0                                     \n")
    s.write("DECAY  21 0.000000e+00 # g : 0.0                                      \n")
    s.write("DECAY  22 0.000000e+00 # a : 0.0                                      \n")
    s.write("#===========================================================          \n")
    s.write("# QUANTUM NUMBERS OF NEW STATE(S) (NON SM PDG CODE)                   \n")
    s.write("#===========================================================          \n")
    s.write("                                                                      \n")
    s.write("Block QNUMBERS 999034  # R                                            \n")
    s.write("        1 2  # 3 times electric charge                                \n")
    s.write("        2 1  # number of spin states (2S+1)                           \n")
    s.write("        3 3  # colour rep (1: singlet, 3: triplet, 8: octet)          \n")
    s.write("        4 1  # Particle/Antiparticle distinction (0=own anti)         \n")
    s.write("Block QNUMBERS 999014  # S1                                           \n")
    s.write("        1 -1  # 3 times electric charge                               \n")
    s.write("        2 1  # number of spin states (2S+1)                           \n")
    s.write("        3 3  # colour rep (1: singlet, 3: triplet, 8: octet)          \n")
    s.write("        4 1  # Particle/Antiparticle distinction (0=own anti)         \n")
    s.write("Block QNUMBERS 999024  # S2                                           \n")
    s.write("        1 -1  # 3 times electric charge                               \n")
    s.write("        2 1  # number of spin states (2S+1)                           \n")
    s.write("        3 3  # colour rep (1: singlet, 3: triplet, 8: octet)          \n")
    s.write("        4 1  # Particle/Antiparticle distinction (0=own anti)         \n")
    s.write("                                                                      \n")
    s.close()


